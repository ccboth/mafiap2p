/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/botapi.ts":
/*!***********************!*\
  !*** ./src/botapi.ts ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar Bot = /** @class */ (function () {\r\n    function Bot(_token) {\r\n        this._token = _token;\r\n    }\r\n    Bot.prototype.request = function (method, data) {\r\n        if (data === void 0) { data = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resp, json;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, fetch(\"https://api.telegram.org/bot\".concat(this._token, \"/\").concat(method), {\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify(data),\r\n                            method: \"POST\",\r\n                        })];\r\n                    case 1:\r\n                        resp = _a.sent();\r\n                        return [4 /*yield*/, resp.json()];\r\n                    case 2:\r\n                        json = _a.sent();\r\n                        return [2 /*return*/, json.result];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Bot.prototype.getMe = function () {\r\n        return this.request(\"getMe\");\r\n    };\r\n    Bot.prototype.getChat = function (chat_id) {\r\n        return this.request(\"getChat\", { chat_id: chat_id });\r\n    };\r\n    Bot.prototype.sendMessage = function (chat_id, text) {\r\n        this.request(\"sendMessage\", {\r\n            chat_id: chat_id,\r\n            text: text\r\n        });\r\n    };\r\n    Bot.prototype.editMessageText = function (chat_id, message_id, text) {\r\n        this.request(\"editMessageText\", {\r\n            chat_id: chat_id,\r\n            message_id: message_id,\r\n            text: text\r\n        });\r\n    };\r\n    Bot.prototype.getPinnedMessage = function (chat_id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getChat(chat_id)];\r\n                    case 1: return [2 /*return*/, (_a.sent()).pinned_message];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Bot.prototype.getUpdates = function () {\r\n        return this.request(\"getUpdates\", { allowed_updates: [\"channel_post\"], timeout: 100, offset: 100 });\r\n    };\r\n    return Bot;\r\n}());\r\nexports[\"default\"] = Bot;\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/botapi.ts?");

/***/ }),

/***/ "./src/connection.ts":
/*!***************************!*\
  !*** ./src/connection.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar Connection = /** @class */ (function () {\r\n    function Connection(iceServers) {\r\n        var _this = this;\r\n        this._onDataChannel = function (event) { };\r\n        this.cecandidator = function (resolve, reject) {\r\n            _this._peerConnection.onicecandidate = function (event) {\r\n                if (!event.candidate) {\r\n                    resolve(_this._peerConnection.localDescription);\r\n                }\r\n                ;\r\n            };\r\n        };\r\n        this._peerConnection = new RTCPeerConnection({ iceServers: iceServers });\r\n        this._peerConnection.ondatachannel = function (event) {\r\n            _this._channel = event.channel;\r\n            _this._onDataChannel(event);\r\n        };\r\n        this._peerConnection.oniceconnectionstatechange = function (ice) {\r\n            if (_this._peerConnection.iceConnectionState == \"failed\") {\r\n                throw \"Ice connection failed. See devtools\";\r\n            }\r\n            else if (_this._peerConnection.iceConnectionState == \"connected\")\r\n                console.log(\"ice connect\");\r\n        };\r\n        this._name = \"\";\r\n    }\r\n    Connection.prototype.disconnect = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                this._peerConnection.close();\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Connection.prototype.sendMessage = function (message) {\r\n        this._channel.send(message);\r\n    };\r\n    Object.defineProperty(Connection.prototype, \"onMessage\", {\r\n        set: function (messageCallback) {\r\n            console.log(\"OnMEssage\");\r\n            this._channel.onmessage = messageCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        set: function (v) {\r\n            if (v)\r\n                this._name = v;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"localDescription\", {\r\n        get: function () {\r\n            return this._localDescription;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Connection.prototype, \"chReadyState\", {\r\n        get: function () {\r\n            return this._channel.readyState;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Connection;\r\n}());\r\nexports[\"default\"] = Connection;\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/connection.ts?");

/***/ }),

/***/ "./src/host.ts":
/*!*********************!*\
  !*** ./src/host.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar connection_1 = __webpack_require__(/*! ./connection */ \"./src/connection.ts\");\r\nvar Host = /** @class */ (function (_super) {\r\n    __extends(Host, _super);\r\n    function Host() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._onConnectionStateOpen = function (event) { };\r\n        return _this;\r\n    }\r\n    Host.prototype.createOffer = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promiseLocalDescription, offer;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._channel = this._peerConnection.createDataChannel(\"dasasg\");\r\n                        this._channel.onmessage = function (ev) { return console.log(ev.data); };\r\n                        promiseLocalDescription = new Promise(this.cecandidator);\r\n                        return [4 /*yield*/, this._peerConnection.createOffer()];\r\n                    case 1:\r\n                        offer = _a.sent();\r\n                        this._peerConnection.onconnectionstatechange = function (ev) {\r\n                            console.log(_this._peerConnection.connectionState);\r\n                            if (_this._peerConnection.connectionState == \"connected\")\r\n                                _this._onConnectionStateOpen(ev);\r\n                        };\r\n                        return [4 /*yield*/, this._peerConnection.setLocalDescription(offer)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, promiseLocalDescription];\r\n                    case 3: return [2 /*return*/, (_a.sent())];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create room.\r\n     */\r\n    Host.prototype.createRoom = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.createOffer()];\r\n                    case 1:\r\n                        _a._localDescription = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Host.prototype.readyStateChange = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            var int = setInterval(function () {\r\n                if (_this._channel.readyState === \"open\") {\r\n                    clearInterval(int);\r\n                    resolve(_this._channel.readyState);\r\n                }\r\n            }, 50);\r\n        });\r\n    };\r\n    Host.prototype.acceptPeer = function (remoteDescription) {\r\n        return this._peerConnection.setRemoteDescription(remoteDescription);\r\n    };\r\n    Object.defineProperty(Host.prototype, \"onConnectionStateOpen\", {\r\n        set: function (callback) {\r\n            this._onConnectionStateOpen = callback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Host;\r\n}(connection_1.default));\r\nexports[\"default\"] = Host;\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/host.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar botapi_1 = __webpack_require__(/*! ./botapi */ \"./src/botapi.ts\");\r\nvar peer_1 = __webpack_require__(/*! ./peer */ \"./src/peer.ts\");\r\n// import Connection from \"./connection\";\r\nfunction sleep(miliseconds) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(function () { return resolve(); }, miliseconds);\r\n    });\r\n}\r\nvar iceServers = [\r\n    {\r\n        urls: \"stun:stun.l.google.com:19302\",\r\n    },\r\n    // {\r\n    //   urls: 'turn:numb.viagenie.ca',\r\n    //   credential: 'muazkh',\r\n    //   username: 'webrtc@live.com'\r\n    // },\r\n    {\r\n        urls: \"turn:192.168.0.12:6545\",\r\n        username: \"Pass\",\r\n        credential: \"pass\",\r\n    },\r\n];\r\nvar myPeer = new peer_1.default(prompt(\"What is your name\"), iceServers);\r\nwindow.onload = main;\r\nfunction getMessage(text, sender) {\r\n    if (sender === void 0) { sender = \"\"; }\r\n    var messageText = document.createElement(\"div\");\r\n    var messageSender = document.createElement(\"div\");\r\n    var message = document.createElement(\"div\");\r\n    messageText.className = \"messageText\";\r\n    messageText.innerHTML = text;\r\n    messageSender.className = \"messageSender\";\r\n    messageSender.innerHTML = sender;\r\n    message.className = \"message\";\r\n    message.appendChild(messageSender);\r\n    message.appendChild(messageText);\r\n    document.querySelector(\"div.messageList\").appendChild(message);\r\n}\r\nfunction host() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, _b, _c, _d, asnwer;\r\n        return __generator(this, function (_e) {\r\n            switch (_e.label) {\r\n                case 0:\r\n                    _b = (_a = console).log;\r\n                    _d = (_c = JSON).stringify;\r\n                    return [4 /*yield*/, myPeer.openNewRoom()];\r\n                case 1:\r\n                    _b.apply(_a, [_d.apply(_c, [_e.sent()])]);\r\n                    asnwer = prompt(\"Answer:?\");\r\n                    myPeer.acceptRoom(JSON.parse(asnwer));\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction sub() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var answer;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, myPeer.connectToRoom(JSON.parse(prompt(\"Offer:?\")), function () { return console.log(\"ondata\"); })];\r\n                case 1:\r\n                    answer = _a.sent();\r\n                    console.log(JSON.stringify(answer));\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction main() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var listenerBotToken, chatId, bot;\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            // const isHost = confirm(\"You host?\");\r\n            // if (isHost) host();\r\n            // else sub();\r\n            document.getElementById(\"sendMessage\").onclick = function () {\r\n                var messageText = document.getElementById(\"textMyMessage\").value;\r\n                document.getElementById(\"textMyMessage\").value = \"\";\r\n                myPeer.sendMessageAll(messageText);\r\n                getMessage(messageText, myPeer.name);\r\n            };\r\n            myPeer.addListenerDefaultMessageType(\"message\", function (evMessage) {\r\n                getMessage(evMessage.data, evMessage.senderName);\r\n                console.log(evMessage);\r\n            });\r\n            listenerBotToken = document.getElementById(\"BotToken\").innerHTML;\r\n            chatId = parseInt(document.getElementById(\"chatId\").innerHTML);\r\n            bot = new botapi_1.default(listenerBotToken);\r\n            document.getElementById(\"create\").onclick = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var roomName, pinMessage, pinMessageValue, _i, _a, offer, localDescription, pinMessageValueUpd, _b, _c, _d, _e, answer, localDescription_1;\r\n                return __generator(this, function (_f) {\r\n                    switch (_f.label) {\r\n                        case 0:\r\n                            roomName = document.getElementById(\"roomName\").value;\r\n                            return [4 /*yield*/, bot.getPinnedMessage(chatId)];\r\n                        case 1:\r\n                            pinMessage = _f.sent();\r\n                            pinMessageValue = JSON.parse(pinMessage.text);\r\n                            // Если не выполнена инициализация сообщения\r\n                            if (!pinMessageValue.init) {\r\n                                // Ее нужно выполнить\r\n                                pinMessageValue.init = true;\r\n                                pinMessageValue.answers = [];\r\n                                pinMessageValue.offers = [];\r\n                            }\r\n                            else {\r\n                                // Если иницализацию уже кто то проделал, мы проверяем занято ли имя комнаты\r\n                                for (_i = 0, _a = pinMessageValue.offers; _i < _a.length; _i++) {\r\n                                    offer = _a[_i];\r\n                                    if (offer.roomName === roomName) {\r\n                                        alert(\"Комната с таким именем уже существует\");\r\n                                        return [2 /*return*/];\r\n                                    }\r\n                                }\r\n                            }\r\n                            return [4 /*yield*/, myPeer.openNewRoom()];\r\n                        case 2:\r\n                            localDescription = _f.sent();\r\n                            pinMessageValue.offers.push({\r\n                                offer: localDescription,\r\n                                roomName: roomName\r\n                            });\r\n                            return [4 /*yield*/, bot.editMessageText(chatId, pinMessage.message_id, JSON.stringify(pinMessageValue))];\r\n                        case 3:\r\n                            _f.sent();\r\n                            document.querySelector(\"div.popupLogin\").style.display = \"none\";\r\n                            _f.label = 4;\r\n                        case 4:\r\n                            if (false) {}\r\n                            return [4 /*yield*/, sleep(1000)];\r\n                        case 5:\r\n                            _f.sent();\r\n                            _c = (_b = JSON).parse;\r\n                            return [4 /*yield*/, bot.getPinnedMessage(chatId)];\r\n                        case 6:\r\n                            pinMessageValueUpd = _c.apply(_b, [(_f.sent()).text]);\r\n                            // Зачем че то делать если все одинаково\r\n                            if (JSON.stringify(pinMessageValue) === JSON.stringify(pinMessageValueUpd))\r\n                                return [3 /*break*/, 4];\r\n                            // А тут можно че то поделать\r\n                            pinMessageValue = pinMessageValueUpd;\r\n                            console.log(pinMessageValueUpd);\r\n                            _d = 0, _e = pinMessageValue.answers;\r\n                            _f.label = 7;\r\n                        case 7:\r\n                            if (!(_d < _e.length)) return [3 /*break*/, 13];\r\n                            answer = _e[_d];\r\n                            if (!(answer.roomName == roomName)) return [3 /*break*/, 12];\r\n                            pinMessageValue.answers.splice(pinMessageValue.answers.indexOf(answer));\r\n                            console.log(\"accept ROOM\");\r\n                            return [4 /*yield*/, myPeer.acceptRoom(answer.answer)];\r\n                        case 8:\r\n                            _f.sent();\r\n                            return [4 /*yield*/, myPeer.releasedConnect];\r\n                        case 9:\r\n                            _f.sent();\r\n                            return [4 /*yield*/, myPeer.openNewRoom()];\r\n                        case 10:\r\n                            localDescription_1 = _f.sent();\r\n                            pinMessageValue.offers.push({\r\n                                roomName: roomName,\r\n                                offer: localDescription_1\r\n                            });\r\n                            return [4 /*yield*/, bot.editMessageText(chatId, pinMessage.message_id, JSON.stringify(pinMessageValue))];\r\n                        case 11:\r\n                            _f.sent();\r\n                            _f.label = 12;\r\n                        case 12:\r\n                            _d++;\r\n                            return [3 /*break*/, 7];\r\n                        case 13: return [3 /*break*/, 4];\r\n                        case 14: return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); };\r\n            document.getElementById(\"connect\").onclick = function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var roomName, pinMessage, pinMessageValue, roomOffer, _i, _a, offer, localDescripion;\r\n                return __generator(this, function (_b) {\r\n                    switch (_b.label) {\r\n                        case 0:\r\n                            roomName = document.getElementById(\"roomName\").value;\r\n                            return [4 /*yield*/, bot.getPinnedMessage(chatId)];\r\n                        case 1:\r\n                            pinMessage = _b.sent();\r\n                            pinMessageValue = JSON.parse(pinMessage.text);\r\n                            roomOffer = null;\r\n                            // Ну а вдруг...\r\n                            if (!pinMessageValue.init) {\r\n                                alert(\"Комнаты с таким именем не существует\");\r\n                            }\r\n                            // Проверка наличия комнаты\r\n                            for (_i = 0, _a = pinMessageValue.offers; _i < _a.length; _i++) {\r\n                                offer = _a[_i];\r\n                                if (offer.roomName == roomName) {\r\n                                    roomOffer = offer;\r\n                                    pinMessageValue.offers.splice(pinMessageValue.offers.indexOf(offer));\r\n                                    bot.editMessageText(chatId, pinMessage.message_id, JSON.stringify(pinMessageValue));\r\n                                }\r\n                            }\r\n                            if (!roomOffer) {\r\n                                alert(\"Комнаты с таким именем не существует\");\r\n                                return [2 /*return*/];\r\n                            }\r\n                            return [4 /*yield*/, myPeer.connectToRoom(roomOffer.offer, function () { return document.querySelector(\"div.popupLogin\").style.display = \"none\"; })];\r\n                        case 2:\r\n                            localDescripion = _b.sent();\r\n                            pinMessageValue.answers.push({\r\n                                roomName: roomName,\r\n                                answer: localDescripion\r\n                            });\r\n                            return [4 /*yield*/, bot.editMessageText(chatId, pinMessage.message_id, JSON.stringify(pinMessageValue))];\r\n                        case 3:\r\n                            _b.sent();\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); };\r\n            return [2 /*return*/];\r\n        });\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/index.ts?");

/***/ }),

/***/ "./src/peer.ts":
/*!*********************!*\
  !*** ./src/peer.ts ***!
  \*********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar host_1 = __webpack_require__(/*! ./host */ \"./src/host.ts\");\r\nvar sub_1 = __webpack_require__(/*! ./sub */ \"./src/sub.ts\");\r\nvar Peer = /** @class */ (function () {\r\n    function Peer(_peerName, _iceServers) {\r\n        var _this = this;\r\n        this._peerName = _peerName;\r\n        this._iceServers = _iceServers;\r\n        this._onConnect = function () { };\r\n        this._mainMessageHandler = function (messageEvent) {\r\n            console.log(\"mainMessageHandler\");\r\n            var message = JSON.parse(messageEvent.data);\r\n            var type = message.type;\r\n            if (type === \"newConnection\")\r\n                _this._newConnectionHandler(message);\r\n            else if (type === \"disconnect\")\r\n                _this._disconnectHandler(message);\r\n            else if (type === \"validatePeerName\")\r\n                _this.acquaintanceAccept(message);\r\n            else if (type === \"acceptPeerName\")\r\n                _this.acceptNewConnectionName(message);\r\n            else if (type === \"introduceOffer\")\r\n                _this._introduceOffer(message);\r\n            else if (type === \"introduceAnswer\")\r\n                _this._introduceAnswer(message);\r\n            if (!(~_this._handlingTypes.indexOf(type)))\r\n                return;\r\n            _this._messageListeners.get(type)(message);\r\n        };\r\n        /**\r\n         * Завершение знакомства между 2 пирами\r\n         * @param message Просто общаются, обмениваясь своими контактами\r\n         */\r\n        this.acceptNewConnectionName = function (message) {\r\n            if (_this._connections.length) {\r\n                var firstConnection = _this._connections[0].name;\r\n                _this.typeSendMessage(firstConnection, {\r\n                    senderName: _this._peerName,\r\n                    data: {\r\n                        knowledgeable: [_this._peerName],\r\n                        newConnectName: message.senderName\r\n                    },\r\n                    type: \"newConnection\"\r\n                });\r\n            }\r\n            _this._lastRoom.name = message.senderName;\r\n            _this._connections.push(_this._lastRoom);\r\n            _this._onConnect();\r\n            _this._lastRoom = null;\r\n        };\r\n        this._lastRoom = null;\r\n        this._connections = [];\r\n        this._messageListeners = new Map();\r\n        this._handlingTypes = [];\r\n        console.log(this._handlingTypes);\r\n        this._connectStatus = false;\r\n    }\r\n    /**\r\n     * Обработка сообщения о новом подключении.\r\n     * Если обрабатывающий пир знаком с новым коннектом, то запрос передается далее.\r\n     * Если же подключение не знакомо, осведомитель знакомит новичка и оповещаемого. После чего запрос передается далее\r\n     * @param message Информация о новом подключении. В сообщении содержит имена всех знающих новичка и имя самого новичка\r\n     */\r\n    Peer.prototype._newConnectionHandler = function (message) {\r\n        var _this = this;\r\n        var intro = message.data;\r\n        var newComerName = intro.newConnectName;\r\n        var introducing = message.senderName;\r\n        // Проверяем, знакомы ли мы\r\n        var isIntroduct = false;\r\n        for (var i = 0; i < this._connections.length; i++) {\r\n            if (this._connections[i].name === newComerName)\r\n                isIntroduct = true;\r\n        }\r\n        if (isIntroduct) {\r\n            // Уже знакомы. Надо познакомить с теми, кто не знаком. Но только первого\r\n            for (var i = 0; i < this._connections.length; i++) {\r\n                if (!(~intro.knowledgeable.indexOf(this._connections[i].name))) {\r\n                    intro.knowledgeable.push(this._peerName);\r\n                    this.typeSendMessage(this._connections[i].name, {\r\n                        senderName: this._peerName,\r\n                        type: \"newConnection\",\r\n                        data: intro,\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // Не знакомы. Надо бы познакомится\r\n            this._lastRoom = new host_1.default(this._iceServers);\r\n            this._lastRoom.createRoom().then(function () {\r\n                _this.typeSendMessage(introducing, {\r\n                    senderName: _this._peerName,\r\n                    type: \"introduceOffer\",\r\n                    data: JSON.stringify(_this._lastRoom.localDescription),\r\n                    newComer: newComerName\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Обрабатывает знакомящий, от которого перенаправляется к новичку, и самим новичком.\r\n     * @param message В обоих случаях содержитв поле \"data\" offer - для подключения к новому человеку.\r\n     * В случае если приходит к знакомящему, содержит в себе аттрибут \"newComer\". В ином - lead undefined\r\n     */\r\n    Peer.prototype._introduceOffer = function (message) {\r\n        var _this = this;\r\n        if (message.newComer)\r\n            // Я знакомлю\r\n            this.typeSendMessage(message.newComer, {\r\n                senderName: this._peerName,\r\n                data: message.data,\r\n                type: \"introduceOffer\",\r\n                lead: message.senderName\r\n            });\r\n        else {\r\n            // Я тот кого привели\r\n            this.connectToRoom(JSON.parse(message.data)).then(function (localDescription) {\r\n                _this.typeSendMessage(message.senderName, {\r\n                    senderName: _this._peerName,\r\n                    type: \"introduceAnswer\",\r\n                    data: JSON.stringify(localDescription),\r\n                    lead: message.lead\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Обрабатывает знакомящий, от которого перенаправляется к бывалому.\r\n     * @param message Отправляется новичком, в \"data\" содежрит answer, нужный для завершения подключения между пирами. От знакомящего приходит без \"lead\".\r\n     */\r\n    Peer.prototype._introduceAnswer = function (message) {\r\n        if (message.lead) {\r\n            // я знакомлю\r\n            this.typeSendMessage(message.lead, {\r\n                senderName: this._peerName,\r\n                type: \"introduceAnswer\",\r\n                data: message.data,\r\n            });\r\n        }\r\n        else {\r\n            // Я одбряю подключение\r\n            this.acceptRoom(JSON.parse(message.data));\r\n        }\r\n    };\r\n    Peer.prototype._disconnectHandler = function (message) { };\r\n    /**\r\n     * Заканчиваем знакомство 1 на 1. сообщяем в ответ свое имя, и запоминаем об этом человеке\r\n     * @param message\r\n     */\r\n    Peer.prototype.acquaintanceAccept = function (message) {\r\n        // this._connections[0].name = message.senderName;\r\n        for (var _i = 0, _a = this._connections; _i < _a.length; _i++) {\r\n            var connect = _a[_i];\r\n            if (!connect.name) {\r\n                connect.name = message.senderName;\r\n                break;\r\n            }\r\n        }\r\n        this.sendMessage(message.senderName, \"accept\", \"acceptPeerName\");\r\n    };\r\n    /**\r\n     * Знакомимся с новым человеком 1 на 1. Говорим свое имя.\r\n     * @param connect Подключение с которым есть соединение\r\n     */\r\n    Peer.prototype.acquaintance = function (connect) {\r\n        console.log(connect.chReadyState, \"READY STATE CHANGE\");\r\n        var message = {\r\n            senderName: this._peerName,\r\n            type: \"validatePeerName\",\r\n            data: \"accept\"\r\n        };\r\n        connect.sendMessage(JSON.stringify(message));\r\n    };\r\n    /**\r\n     * New connection. Connect to existing peer\r\n     * @param offer Offer, where connect\r\n     * @param onConnect will be called upon connection\r\n     * @returns local description\r\n     */\r\n    Peer.prototype.connectToRoom = function (offer, onConnect) {\r\n        if (onConnect === void 0) { onConnect = function () { }; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var connection;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        connection = new sub_1.default(this._iceServers);\r\n                        return [4 /*yield*/, connection.connect(offer)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        connection.onDataChannel = function () {\r\n                            connection.onMessage = _this._mainMessageHandler;\r\n                            onConnect();\r\n                            console.log(connection.chReadyState);\r\n                        };\r\n                        this._connections.push(connection);\r\n                        return [2 /*return*/, connection.localDescription];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create port to new connection\r\n     */\r\n    Peer.prototype.openNewRoom = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this._lastRoom = new host_1.default(this._iceServers);\r\n                        return [4 /*yield*/, this._lastRoom.createRoom()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this._lastRoom.localDescription];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Accept remote peer and init him\r\n     * @param remoteDescription Remote description\r\n     */\r\n    Peer.prototype.acceptRoom = function (remoteDescription, acceptCallback) {\r\n        if (acceptCallback === void 0) { acceptCallback = function () { }; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._lastRoom)\r\n                            throw \"Connect is no created\";\r\n                        return [4 /*yield*/, this._lastRoom.acceptPeer(remoteDescription)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        this._lastRoom.readyStateChange().then(function (state) {\r\n                            _this._lastRoom.onMessage = _this._mainMessageHandler;\r\n                            _this.acquaintance(_this._lastRoom);\r\n                            acceptCallback();\r\n                        });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ;\r\n    /**\r\n     * ABORT room\r\n     */\r\n    Peer.prototype.abortLastRoom = function () {\r\n        if (!this._lastRoom)\r\n            return;\r\n        this._lastRoom.disconnect();\r\n        this._lastRoom = null;\r\n    };\r\n    Peer.prototype.typeSendMessage = function (target, message) {\r\n        for (var i = 0; i < this._connections.length; i++) {\r\n            var connect = this._connections[i];\r\n            if (!(connect.name == target))\r\n                continue;\r\n            connect.sendMessage(JSON.stringify(message));\r\n        }\r\n    };\r\n    Peer.prototype.sendMessage = function (target, text, type) {\r\n        for (var i = 0; i < this._connections.length; i++) {\r\n            var connect = this._connections[i];\r\n            if (!(connect.name == target))\r\n                continue;\r\n            var message = {\r\n                senderName: this._peerName,\r\n                type: type,\r\n                data: text\r\n            };\r\n            connect.sendMessage(JSON.stringify(message));\r\n        }\r\n    };\r\n    Peer.prototype.sendMessageAll = function (text, type) {\r\n        if (type === void 0) { type = \"message\"; }\r\n        var message = {\r\n            senderName: this._peerName,\r\n            type: type,\r\n            data: text\r\n        };\r\n        var data = JSON.stringify(message);\r\n        this._connections.forEach(function (con) {\r\n            con.sendMessage(data);\r\n        });\r\n    };\r\n    Peer.prototype.addListenerMessageType = function (type, listener) {\r\n        this._messageListeners.set(type, listener);\r\n        this._handlingTypes.push(type);\r\n    };\r\n    Peer.prototype.addListenerDefaultMessageType = function (type, listener) {\r\n        this.addListenerMessageType(type, listener);\r\n    };\r\n    /**\r\n     * Checking for existence\r\n     * @param peerName\r\n     * @returns true, if peer with this name already exist, false otherwise\r\n     */\r\n    Peer.prototype.peerNameExist = function (peerName) {\r\n        for (var _i = 0, _a = this._connections; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            if (connection.name === peerName)\r\n                return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Peer.prototype, \"isConnect\", {\r\n        get: function () {\r\n            return this._connectStatus;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Peer.prototype, \"onConnect\", {\r\n        set: function (v) {\r\n            this._onConnect = v;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Peer.prototype, \"name\", {\r\n        get: function () {\r\n            return this._peerName;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Peer.prototype, \"releasedConnect\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return new Promise(function (resolve) {\r\n                var int = setInterval(function () {\r\n                    if (!_this._lastRoom) {\r\n                        clearInterval(int);\r\n                        resolve();\r\n                    }\r\n                }, 50);\r\n            });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Peer;\r\n}());\r\nexports[\"default\"] = Peer;\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/peer.ts?");

/***/ }),

/***/ "./src/sub.ts":
/*!********************!*\
  !*** ./src/sub.ts ***!
  \********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nvar connection_1 = __webpack_require__(/*! ./connection */ \"./src/connection.ts\");\r\nvar Sub = /** @class */ (function (_super) {\r\n    __extends(Sub, _super);\r\n    function Sub() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Sub.prototype.connect = function (remoteDescription) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this._peerConnection.setRemoteDescription(remoteDescription)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.createAnswer()];\r\n                    case 2:\r\n                        _a._localDescription = _b.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Sub.prototype.createAnswer = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promiseLocalDescription, answer;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promiseLocalDescription = new Promise(this.cecandidator);\r\n                        return [4 /*yield*/, this._peerConnection.createAnswer()];\r\n                    case 1:\r\n                        answer = _a.sent();\r\n                        return [4 /*yield*/, this._peerConnection.setLocalDescription(answer)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, promiseLocalDescription];\r\n                    case 3: return [2 /*return*/, (_a.sent())];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Sub.prototype, \"onDataChannel\", {\r\n        set: function (v) {\r\n            this._onDataChannel = v;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Sub;\r\n}(connection_1.default));\r\nexports[\"default\"] = Sub;\r\n\n\n//# sourceURL=webpack://mafiap2p/./src/sub.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;